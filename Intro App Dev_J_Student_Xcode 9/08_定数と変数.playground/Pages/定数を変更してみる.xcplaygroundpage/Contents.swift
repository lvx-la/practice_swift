/*:
 ## 定数を変更してみる
 
 定数に新しい値を代入しようとすると、どうなるでしょうか？
 
 以下のように、エラーとみなされます。「Cannot assign to value: 'name' is a 'let' constant」（値を代入できません。'name'は'let'定数です）というエラーが表示されています。`let`と constant（定数）が何を意味するか知っているので、このエラーの意味はわかりますね。
*/
let name = "Johnny"
name = "John"
/*:
 脇に表示されているエラーが、いつもと少し違います。
 
 これは通常のエラーインジケータです。 ![通常のエラー](NormalError.png)
 
 上のエラーでは、赤色の丸の中に白い点が入っています。 ![Fix-it error](FixItError.png)
 
 このようなエラーが表示される場合、Xcodeがエラーの修正案を持っていることを意味します。
 
 #### Fix-it機能
 
 一部のエラーについては、コードをどのように変更すればエラーが修正されるかXcodeが提案してくれます。これを「 _Fix-it_ 機能」と呼びます。
 
 白い点の入った赤い丸をクリックします。情報が2行で表示されます。1行目はエラーの説明です。2行目はエラーの修正案です。
 
 ![Fix-itの修正案](FixItSuggestion.png)
 
 修正案は`let`を`var`に変更するというもので、修正された新しいコードがPlaygroundに表示されます。Enterキーを押すとFix-itの修正案が適用され、コードがアップデートされてエラーが消えます。
 
 次は、Fix-itの修正案を常に受け入れるべきかどうかについて考えます。
 
 */

//: [前ヘ](@previous)  |  7／13ページ  |  [次は「選択を行う」です。](@next)
