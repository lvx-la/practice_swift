/*:
 ## プロパティ
 
 このPlaygroundの最初に、「都市」や「車」といった様々な型について考えました。1つの都市でも各インスタンスの名前は異なることや、1台の車でも各インスタンスには独自の走行距離があることは想像できるでしょう。
 
 同じように、Swiftにおいて、各インスタンスは1つまたは複数の関連情報を持ちます。これらの値を「プロパティ」と呼びます。
  
 ある文字列に任意の文字が含まれるかどうか知りたい場合があります。プロパティ`isEmpty`を使えばわかります。
 
 次のようにプロパティを宣言します。\
 `var isEmpty: Bool { get }`
 
 この宣言は、変数の宣言に似ています。メソッドは1つの型の各インスタンスに組み込まれた関数であるように、プロパティは、1つの型の各インスタンスに組み込まれた定数や変数です。
 
 このプロパティには`isEmpty`という名前が付けられ、型は`Bool`です。文字列の内容が変わるとプロパティ値が変わるので、`var`とマークされています。\
 `{ get }`は、このプロパティの値を取得することだけが可能で、この値を設定できないことを示します。「読み取り専用」のプロパティとも呼ばれます。
 
 プロパティを呼び出すには、プロパティの後にピリオド（`.`）を使い、プロパティ名を続けます。

*/
let something = "It was the best of times"
something.isEmpty

let nothing = ""
nothing.isEmpty
/*: 
 メソッドと同様に、プロパティにも型安全のルールが適用されます。
 
 - インスタンスなしにプロパティを使うことはできません。
 - インスタンスの型の一部であるプロパティのみ、使うことができます。
 
 >(注意):
これまで扱ってきた型は、保存する情報が非常にシンプルなので、持っているプロパティは多くありません。より複雑な型については後述します。
 
 次のページでは、メソッドとプロパティの違いについて学習します。

[前ヘ](@previous)  |  6／17ページ  |  [次は「プロパティとメソッド」です。](@next)
*/
