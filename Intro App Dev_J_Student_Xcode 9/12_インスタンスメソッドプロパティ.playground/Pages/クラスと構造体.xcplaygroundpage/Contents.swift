/*:
 ## クラスと構造体
 
 クイックヘルプやマニュアルでAPIを調べると、`String`について以下のような型の宣言が表示されます。\
 パネルの一番上に「`struct String`」という宣言があります。
 
 ![Stringのクイックヘルプインスペクタパネル](StringQuickHelp.png)

 ほかのフレームワークを調べ始めると、`UIColor`について以下のような型宣言に出会います。
 
 ![UIColorのクイックヘルプインスペクタパネル](UIColorQuickHelp.png)
 
 Swiftでアプリケーションを構築する時は、struct（構造体、structuresの略）とclass（クラス）の2つのインスタンスを扱うことになります。 どちらも、Swiftで型を定義する方法を提供します。
 
 ここでは、構造体とクラスには類似点がたくさんあることを知っておけば十分です。
 
- どちらもインスタンスを持つ
- インスタンスはイニシャライザを使って作成される
- どちらもメソッドを持つことができる
- どちらもプロパティを持つことができる
 
インスタンスを作成して使う場合は、型が構造体であってもクラスであっても、同じSwiftコードを記述します。
 
このコースの残りの部分では、インスタンスの作成方法と、メソッドおよびプロパティの使い方をさらに練習します。後のレッスンで、自分の構造体を定義する方法も学習します。このコースでは、クラスと構造体の違いについて詳しい考察は行いませんが、この両方を使っているうちに、違いを学習する準備ができるでしょう。

 メソッドとプロパティを使うことには、どのようなメリットがあるのでしょうか？
 
[前ヘ](@previous)  |  12／17ページ  |  [次は「メソッドやプロパティを使う理由」です。](@next)
 */
