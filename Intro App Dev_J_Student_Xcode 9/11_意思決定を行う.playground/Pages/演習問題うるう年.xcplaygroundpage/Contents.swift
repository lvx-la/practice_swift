/*:
 ## 演習問題：うるう年
 
 ある年がうるう年（Leap Year）かどうか判定するには、いくつかの判断を行う必要があります。
 
 - その年は4で割り切れますか？
    - もしそうなら、その年は100で割り切れますか？
        - そうでなければ、うるう年です。
        - もしそうなら、その年は400で割り切れますか？
            - そうでなければ、**うるう年ではありません。**
            - もしそうなら、うるう年です。
 
 これらの判断を関数の中で行うことができます。
 
 `number(_:, isDivisibleBy:)`関数は、このPlaygroundの演習を簡単にするために構築されています。以下は、ある年がうるう年かどうか判定する関数の一部です。
*/
func isLeapYear(_ year: Int) -> Bool {
    if number(year, isDivisibleBy: 4) {
        // このコードを完成させてください。
        return true
    } else {
        return false
    }
}
// Should be true
isLeapYear(2000)
// Should be false
isLeapYear(1900)
// Should be true
isLeapYear(2012)
// Should be false
isLeapYear(2017)
//: - callout(演習): 
//:上の関数を完成させ、すべてのルールに従い、例が正しい答えになるようにしてください。
/*:
 
 _Copyright © 2017 Apple Inc._
 
 _このソフトウェアおよび関連する文書ファイル（以下「ソフトウェア」という）の複製を入手した個人が、ソフトウェアを制限なく扱うこと（ソフトウェアの複製を使用、複製、修正、統合、公開、配布、サブライセンス、および販売を行う権利を含むがこれらに限定されない）およびソフトウェアを提供された個人にこれを行うことを許可することを、次の条件に基づいて無償で付与されます。_
 
 _上記の著作権通知とこの許可通知は、ソフトウェアのすべての複製または重要な部分に記載する必要があります。_
 
 _ソフトウェアは、明示的または暗黙的にかかわらず、いかなる保証を伴わず現状のまま提供されます。こうした保証には市場性、特定目的への適合性、および権利を侵害していないことに関する保証が含まれますがこれに限りません。作者または著作権所有者は、いかなる場合も、ソフトウェアに起因または関連する、もしくはソフトウェアの使用またはその他の取り扱いによるいかなる要求、損害またはその他の義務に対する責務を、契約や不法行為その他の行動の有無にかかわらず負いません。_
 */
//: [前ヘ](@previous)  |  13／13ページ
