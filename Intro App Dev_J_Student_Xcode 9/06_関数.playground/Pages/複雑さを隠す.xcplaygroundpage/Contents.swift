/*:
 ## 複雑さを隠す
 
 関数を使って童謡を出力するのは、このPlaygroundの最初に書いたコードよりも長くて複雑ではないか、と思うかもしれません。すべての関数を1つずつ考えようとすれば、確かにそうです。しかし、関数を使うポイントは、理解可能で再使用可能な部分に分解することです。各部分は、わかりやすい仕事を1つ行います。
 
 アプリケーションで作業をする時、すべてのコードを1行ずつ見ることは、まずありません。呼び出す関数が「何」をするのかわかっていれば、「どのように」それを行うか知っている必要はありません。例えば、このページでは、曲を構成するための関数がすでにページに組み込まれているので、とても簡単に曲を記述できます。
*/
verseOne()
breatheBetweenVerses()
verseTwo()
breatheBetweenVerses()
verseThree()
/*: 
 - experiment:(実験):
 行を移動して節の順番を入れ替えたり、行をコピーして節を繰り返したりします。

 次のページでは、プログラムの変更が簡単になるという、関数のもう1つのメリットについて学びます。
 
 [前ヘ](@previous)  |  8／12ページ  |  [次は「1回変更すればよい」です。](@next)
*/
