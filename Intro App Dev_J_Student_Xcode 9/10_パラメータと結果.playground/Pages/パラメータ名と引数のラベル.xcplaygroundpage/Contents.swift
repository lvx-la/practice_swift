/*:
 ## パラメータ名と引数のラベル
 
 前のページで、目的がわかるようにして、文章のように読みやすく関数を定義する方法を確認しました。ただし、それによって別の問題が発生します。
 
 ```
 (例):
 func printHello(to: String) {
     print ("Hello " + to)
 }
 printHello(to: "Chris")
 ```
 
 定数名`to`が関数の中にありますが、これは以前に学習したよい名前のルールに従っていません。
 
 上のようにシンプルな関数なら大きな問題にはなりませんが、もっと長いコードを読む時に`to`が名前として使われていると混乱を招きます。
 
 この問題を解決するには、関数の中のパラメータに別の名前を使います。
 */
func printHello(to name: String) {
    print("Hello " + name)
}
printHello(to: "Chris")
printHello(to: "Johnny")
/*:
 パラメータの名前が2回付けられています。呼び出す時に最初の名前を使い、関数の本文の中では2つ目の名前を使います。
 
 実は、これらの2つの名前を示すもっとよい言葉があります。関数を呼び出す時（および1つまたは複数の引数を渡す時）に使う名前を「引数のラベル」と呼びます。 
 
 関数内で使用される名前（受け取られる値）は「パラメータ名」です。
 
- experiment:(実験):
上の関数で、引数のラベルとパラメータ名を変更してみます。引数のラベルを変更すると、関数が呼び出されている場所をアップデートする必要が生じます。また、パラメータ名を変更すると、関数本文をアップデートする必要が生じます。
 
 `print()`関数は引数のラベルを持たないことを覚えていますか？次にその方法を確認します。
 
[前ヘ](@previous)  |  11／17ページ  |  [次は「名前のない引数」です。](@next)
 */
