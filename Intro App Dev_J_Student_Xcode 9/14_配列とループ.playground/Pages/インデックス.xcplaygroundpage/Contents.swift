//: ## インデックス
//: ここに、デバイスの配列があります。
let devices = ["iPhone", "iPad", "iPod", "iMac"]
/*:
 前のページで行ったように、「Show Result」ボタンを使って結果のインラインを表示します。配列の各アイテムの横に、ゼロから始まる数字があります。
 
 この番号は配列内のアイテムの「インデックス」と呼ばれ、行内での位置を表します。この場合、`"iPod"`は`devices`配列のインデックス2にあります。この配列は`let`を使って定義されているので、アイテムとアイテムの順番が変わることはありません。つまり、何度この配列を出力しても、`"iPod"`は常にインデックス2にあるということです。
 
- note:(注意):
 インデックス（index）の複数形は"indices"と書かれたり"indexes"と書かれたりします。)
 
 配列の各アイテムには、ゼロから始まるインデックスがあります。配列名の後にインデックスを角括弧に入れて指定することにより、特定のインデックスに保存された値を取得できます。
*/
// 次のコードはインデックス0のオブジェクトを取得します。
devices[0]

/*: 
 - experiment:(実験):
 定数`favoriteDevice`を宣言し、`devices`配列に対するインデックスを使ってその値を"iPod"に設定してください。
 */
// 以下でfavoriteDeviceを宣言します。

/*:
 インデックスを使用した値の取得は、慎重に行う必要があります。リストに含まれないアイテムを依頼すると、重大なプログラムエラーの原因となることがあります。桟橋の長さが50フィートしかないのに100フィート進めと指示しているようなものです。だれかが、コードを厳密に実行するプログラムのようにあなたの指示に従ったとしたら、その人は海に落ちてしまうでしょう。

 - experiment:(実験):
 リストのインデックス`4`のアイテムを取得しようとしてみてください。コンソールを開き、エラーに関する詳しい情報を確認します。
*/



//: 次に、配列に含めることのできる値の数について調べます。\
//: [前ヘ](@previous)  |  3／17ページ  |  [次は「Count」です。](@next)
