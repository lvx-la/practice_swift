/*:
 ## 型
 Swiftでは、すべての値に「型（Types）」があります。
 
 日常生活におけるモノの型と同じように、Swiftの型それぞれにプロパティと動作のセットがあります。

 これまでに2種類の値の型が出てきました。
 
 - `"Hello"`や`"Wimbledon"`などの文字列
 - `101`や`-10`などの数
 */
let string = "I am a string"
let number = 12
//: これらの型が異なる動作をすることも見てきました。例えば、2つを足すとどうなるでしょうか？
1 + 1 // 2に等しい
"1" + "1" // 「11」に等しい
/*:
 Swiftにおける文字列型の名前は、そのまま`String`です。
 
 数値型の名前としては、integer（整数）の略語、`Int`を使います。`Int`値は分数部分を持たない整数です。`Int`にはプラスの値とマイナスの値があり、ゼロも含まれます。
 
 これまでに紹介した型は2つだけですが、もっとたくさん出てきます。様々な型の使い方を学んだり、独自に新しい型を作ることは、プログラミング学習の重要な部分になります。
 
 ツールボックスに入っているソケットレンチ、ドライバー、ペンチ、ハンマーを考えてみてください。それぞれの道具は特定のタスクには最適ですが、ほかのタスクにはまったく役に立ちません。Swiftで新しい型の使い方を学習するたびに、プログラミングのツールボックスに新しい道具が追加されていきます。
 
 お気に入りのシャツをしばらく思い浮かべてから、次のページに進んでください。
 
[前ヘ](@previous)  |  2／13ページ  |  [次は「お気に入りのシャツ」です。](@next)
 */
