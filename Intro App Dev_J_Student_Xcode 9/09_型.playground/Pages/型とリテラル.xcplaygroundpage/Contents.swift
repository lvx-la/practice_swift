/*:
 ## 型とリテラル
 
 コードの中で`42`や`"hello"`のように値を記述したものを「リテラル」と呼びます。Swiftは、リテラルがどの型を意図しているのかを推測します。
 
 例えば、二重引用符で囲まれた値は`String`として扱い、整数は`Int`として扱います。友達をビーチに誘い、水着で集まったとしたら、その文脈からあなたと友達は海に入るだろうと推測されます。Swiftがコードの文脈を使って何かの型を推測することを「型推論」と言います。
 
 推測可能な一般的な型を見てみましょう。整数が`Int`型と推測されることはすでに見たとおりですが、小数点を含む数を入力すると`Double`型として推測されます。
 
 >(注意):\
`Double`型という名前は「Double-precision floating point」（倍精度浮動小数点）を参照することに由来します。`Float`型も小数点を含む数を参照しますが、デフォルトの`Double`の方が倍の精度を持ちます。
*/
let partNumber = 3.2
let wholeNumber = 2
//: - experiment:(実験):
//:`partNumber`（小数点を含む数字）と`wholeNumber`（整数）を使って、2つを加算するなどの計算を実行してみてください。エラーを確認します。両方が整数、または両方が小数になるように値を変更し、どのように違うか確認します。




//: Swiftの型安全性により、`Double`型と`Int`型を混ぜて使うことはできません。\
//: 次に、Swiftが型を判断する別の方法を見てみましょう。\
//: [前ヘ](@previous)  |  6／13ページ  |  [次は「代入による型推論」です。](@next)
