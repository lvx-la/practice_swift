/*:
 ## ルーチン
 
 ダンスは楽しいものですが、動作を1つずつ記述していたら、簡単なダンスでも長くて繰り返しが多い記述になります。通常は動作を1つずつ記述するのではなく、個々の動作をつないでルーチン全体に名前を付けます。 
 
 次のような関数を構築することによって、コード内でルーチンを作成します。
 */
func doTheDisco() {
    leftArmUp()
    shakeItRight()
    leftArmDown()
    shakeItCenter()
}
/*:
 ルーチンに加える動作を決めたら、今作った関数を呼び出してロボットダンスを開始します。
 */
startBot()
fabulize()
doTheDisco()
doTheDisco()
doTheDisco()
/*:
 関数とは、プログラマが仕事のブロックをグループにまとめる方法です。「関数」のPlaygroundでは、関数が便利な理由を学びました。復習しましょう。
 
 - 関数は再使用できるので、読んだり入力したりする手間を省ける。
 - 関数はそのままで理解できるので、個々のステップを考える必要がない。
 - 関数が変更されると、その関数を使用しているすべての場所で変更が反映される。
 
 `doTheDisco()`で、これらのメリットをすべて使ってみましょう。
 
 - experiment:(実験):
 `doTheDisco()`関数を鏡に映したイメージに変更します。「左」はすべて「右」に、「右」はすべて「左」にします。同じ動きを3回分入力するとしたら、どれほど手間がかかることでしょう。
 
 BoogieBotをパーソナライズしてみませんか？次のページでは、作品に署名する方法を学びます。
 
 [前ヘ](@previous)  |  5／13ページ  |  [次は「作品に署名する」です。](@next)
*/
