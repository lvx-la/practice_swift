/*:
 ## データをモデル化する
 
 アプリケーションを構築する時に考えるべき重要事項の一つは、アプリケーションが必要とする情報をどのように表現するかということです。
 
 アプリケーションのなかには、実世界のソフトウェアモデルになっているものあります。例えば、ショッピングアプリケーションには実際の店舗と同じように商品、ショッピングカート、顧客、注文があります。

 一般に、アプリケーションが扱うデータのタイプを集合的に「モデル」または「データモデル」と呼びます。
 
 モデルはアプリケーションごとに固有です。
 
- ミュージックプレーヤーアプリケーションなら、トラック、アーティスト、アルバム、プレイリストがあります。
- 描画アプリケーションなら、ペン、ブラシ、キャンバス、ユーザーが描いた図形があります。
 
 このPlaygroundでは、アプリケーションのモデルを定義する方法を学習します。まずは曲から始めましょう。
 
 ### 曲をモデル化する
 
 皆さんは、`String`、`Int`、`Double`、`Bool`という型を知っていますが、これらを使って曲を表すにはどうすればよいでしょうか？曲のリストをどのように表しますか？
 
 次の例のように表せます。
*/
let songTitles = ["Ooh yeah", "Maybe", "No, no, no", "Makin' up your mind"]
let artists = ["Brenda and the Del-chords", "Brenda and the Del-chords", "Fizz", "Boom!"]
let durations = [90, 200, 150, 440]
let song3 = "\(songTitles[2]) by \(artists[2]), duration \(durations[2])s"
/*:
 ある曲についての情報にアクセスするには、同じインデックスを使って3つの配列にアクセスする必要があります。
 
 このアプローチにはいくつかの疑問と問題点があります。
 
 曲の配列でループ処理をするにはどうすればよいでしょうか？関数に引数として曲を渡したい場合はどうすればよいでしょうか？それぞれの曲に格付け（星）を含めたい場合はどうすればよいでしょうか？全部書き直さなければならないのでしょうか？
 
 `String`、`String`、`Int`の代わりに`Song`という型を使う方が便利です。
 
 次は`Song`を定義する方法を見ていきます。
 
 1／9ページ  |  [次は「カスタム型」です。](@next)
*/
