/*:
 ## 列挙型
 
 Swiftでは、関連する選択肢のグループを「列挙型」で表せます。それぞれの選択肢を「case」（ケース）と呼びます。独自の構造体を定義できるのと同じように、独自の列挙型を定義できます。
*/
enum LunchChoice {
    case pasta
    case burger
    case soup
}
/*: 
上の宣言では、新しい型`LunchChoice`が作成されています。`LunchChoice`のインスタンスは、定義された3つのケースのいずれかのみです。
 
 列挙型（enumeration）は通常、略して「enum」と呼ばれます。
 
 enumの名前は、ほかの型名と同じように大文字で始まります。\
 caseの名前は、プロパティやメソッドの名前と同じように小文字で始まります。
 
 enumの名前は`LunchChoice`のように単数形でなければなりません。`LunchChoices`ではありません。これは、複数の選択肢ではなく1つの選択肢のみを参照するからです。

インスタンスは次のように作成します。
*/
let choice = LunchChoice.burger
//: enumのメリットの1つは、caseのいずれか1つしか選択できないことです。メニューに載っていない料理は注文できません。\
//: 下の行をコメント解除してエラーを確認し、終わったらもう一度コメント化してください。
//let special = LunchChoice.fish
/*:
 
 - experiment:(実験):
enumの様々なcaseについて、いくつか定数を作成してください。オートコンプリート機能によって選択肢が表示されることを確認してください。
*/



/*:
 次に、型システムがenumをどのように理解するかについて学習します。\
[前ヘ](@previous)  |  3／21ページ  |  [次は「列挙型と型推論」です。](@next)
*/
